{"version":3,"file":"static/js/912.eae6f977.chunk.js","mappings":"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","sources":["components/redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/PhonebookForm/PhonebookForm.module.css?56c1","components/PhonebookForm/PhonebookForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PhonebookItem/PhonebookItem.module.css?0081","components/PhonebookItem/PhonebookItem.jsx","components/PhonebookList/PhonebookList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PhonebookFilter/PhonebookFilter.module.css?69e8","components/PhonebookFilter/PhonebookFilter.jsx","Pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhonebookForm_form__0btgv\",\"label\":\"PhonebookForm_label__a86iP\",\"button\":\"PhonebookForm_button__ftF0u\",\"input\":\"PhonebookForm_input__oekwR\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/redux/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'components/redux/selectors';\nimport css from './PhonebookForm.module.css';\n\nconst PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    const isContactExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    const isNumberExist = contacts.find(\n      ({ number }) => contact.number === number\n    );\n\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number ${contact.number} is already in contacts!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleNameChange}\n          className={css.input}\n        />\n      </label>\n\n      <label className={css.label}>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n          className={css.input}\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactButton\":\"PhonebookItem_contactButton__kmni0\",\"contactListItem\":\"PhonebookItem_contactListItem__Yk89J\",\"contactName\":\"PhonebookItem_contactName__uEUak\",\"contactNumber\":\"PhonebookItem_contactNumber__VgWWF\"};","// import { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import { deleteContact } from 'components/redux/operations';\n// import css from './PhonebookItem.module.css';\n\n// function PhonebookItem({ contact }) {\n//   const dispatch = useDispatch();\n\n//   const handleDelete = () => {\n//     dispatch(deleteContact(contact.id));\n//   };\n\n//   return (\n//     <li className={css.contactListItem}>\n//       <span className={css.contactName}>{contact.name}</span>\n//       <span className={css.contactNumber}>{contact.number}</span>\n//       <button className={css.contactButton} onClick={handleDelete}>\n//         Delete\n//       </button>\n//     </li>\n//   );\n// }\n// PhonebookItem.propTypes = {\n//   contact: PropTypes.object.isRequired,\n// };\n\n// export default PhonebookItem;\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact, editContatc } from 'components/redux/operations';\nimport { Modal, Input, Button, message, Popconfirm } from 'antd';\nimport css from './PhonebookItem.module.css';\n\nfunction PhonebookItem({ contact }) {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const confirm = e => {\n    handleDelete(e.target.value);\n    message.success('Click on Yes');\n  };\n  const cancel = e => {\n    console.log(e);\n    message.error('Click on No');\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleEdit = () => {\n    setShowModal(true);\n  };\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContatc({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  return (\n    <li className={css.contactListItem}>\n      <span className={css.contactName}>{contact.name}</span>\n      <span className={css.contactNumber} href={`tel:${contact.number}`}>\n        {contact.number}\n      </span>\n      <button className={css.contactButton} onClick={handleEdit}></button>\n      <Popconfirm\n        title=\"Delete the contact\"\n        description=\"Are you sure to delete this contact?\"\n        onConfirm={confirm}\n        onCancel={cancel}\n        okText=\"Yes\"\n        cancelText=\"No\"\n      >\n        <button className={css.contactButton} danger></button>\n      </Popconfirm>\n\n      <Modal\n        open={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" onClick={handleSave}>\n            Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>New Name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>New Number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number format could be: +1 555 1234567 or 555 1234567.\"\n            required\n          />\n        </div>\n      </Modal>\n    </li>\n  );\n}\n\nPhonebookItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default PhonebookItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from 'components/redux/selectors';\nimport { fetchContacts } from 'components/redux/operations';\nimport PhonebookItem from 'components/PhonebookItem/PhonebookItem';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction PhonebookList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ? (\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n        <p>Sorry, there are no matches to this query</p>\n      ) : (\n        filteredContacts.map(({ id, name, number }) => (\n          <PhonebookItem key={id} contact={{ id, name, number }} />\n        ))\n      )}\n    </ul>\n  );\n}\n\nexport default PhonebookList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"PhonebookFilter_filterInput__MiODz\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'components/redux/selectors';\nimport { setFilter } from 'components/redux/filterSlice';\nimport css from './PhonebookFilter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value.trim()));\n  };\n\n  return (\n    <input\n      className={css.filterInput}\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={handleFilterChange}\n      disabled={useSelector(selectContacts).length === 0}\n    />\n  );\n}\n\nexport default Filter;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport PhonebookList from 'components/PhonebookList/PhonebookList';\nimport Filter from 'components/PhonebookFilter/PhonebookFilter';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook📱</title>\n        </Helmet>\n        <PhonebookForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <PhonebookList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","className","css","onSubmit","e","preventDefault","contact","find","Notiflix","concat","isNumberExist","_ref2","addContact","children","_jsx","type","pattern","title","required","value","onChange","target","showModal","setShowModal","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleDelete","deleteContact","id","handleCancel","href","onClick","Popconfirm","description","onConfirm","message","onCancel","console","log","okText","cancelText","danger","Modal","open","footer","Button","editContatc","Input","filteredContacts","useEffect","fetchContacts","Loader","length","map","PhonebookItem","placeholder","setFilter","trim","disabled","_Fragment","HelmetProvider","Helmet","PhonebookForm","Filter","PhonebookList"],"sourceRoot":""}